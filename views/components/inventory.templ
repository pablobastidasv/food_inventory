package components

import (
	"fmt"
	"github.com/pablobastidasv/fridge_inventory/views/icons"
	"github.com/pablobastidasv/fridge_inventory/views/shared"
)

type InventoryCategory struct {
	CategoryName string
	Items        []InventoryItemInfo
}

type InventoryItemInfo struct {
	Id          string
	ProductName string
	Amount      string
}

templ InventoryItemsByCategory(items []InventoryCategory) {
	<div class="flex flex-col gap-2 mt-4">
		for _, ic := range items {
			@InventoryItemCategory(ic)
		}
	</div>
}

templ InventoryItemCategory(item InventoryCategory) {
	<details class="collapse bg-base-200 collapse-arrow">
		<summary class="collapse-title text-xl font-medium">{ item.CategoryName }</summary>
		<div class="collapse-content">
			@InventoryItems(item.Items)
		</div>
	</details>
}

templ InventoryItems(items []InventoryItemInfo) {
	<div class="flex flex-row gap-2 flex-wrap">
		for _, i := range items {
			@InventoryItem(i)
		}
	</div>
}

templ InventoryItem(item InventoryItemInfo) {
	<div class="card bg-base-100 w-96 shadow-xl">
		<div class="card-body" hx-target="closest div">
			<h2 class="card-title">{ item.ProductName }</h2>
			<div class="flex justify-center w-auto">
				@InventoryValue(item.Id, item.Amount)
			</div>
		</div>
	</div>
}

templ InventoryItemForm(id string, amount string) {
	<form hx-put={ fmt.Sprintf("/inventories/%s", id) } class="flex flex-row items-center gap-3">
		<div>
			<input
				type="number"
				name="amount"
				class="text-center input max-w-32 text-5xl p-0"
				value={ amount }
				autofocus
				required
			/>
		</div>
		<button class="flex flex-row items-center">
			@icons.Floopy()
			@shared.LoadingIndicatorSm()
		</button>
	</form>
}

templ InventoryValue(id string, amount string) {
	<div class="flex flex-row items-center gap-2" hx-swap="outerHTML" hx-get={ fmt.Sprintf("/inventories/%s/edit", id) }>
		<span class="text-right text-5xl">
			{ amount }
		</span>
		@shared.LoadingIndicatorSm()
	</div>
}

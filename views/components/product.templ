package components

import (
	"fmt"
	"github.com/google/uuid"
)

const (
	INFO  string = "INFO"
	ERROR        = "ERROR"
	WARN         = "WARN"
)

type (
	ProductOverview struct {
		Id       string
		Name     string
		Category string
	}

	Category struct {
		Id   string
		Name string
	}
)

templ ProductForm(categories []Category) {
	<form hx-post="/products" hx-swap="outerHTML" class="flex flex-1 items-end gap-3 m-4" autocomplete="off">
		<div>
			<label for="name">Nombre</label>
			<input id="name" name="name" class="input input-bordered w-full max-w-xs" required autofocus/>
		</div>
		<div>
			<label for="category">Categoria</label>
			<select name="category" class="select select-bordered w-full max-w-xs" required>
				<option value="">-- Seleccione una categoria --</option>
				for _, c := range categories {
					<option value={ c.Id }>{ c.Name }</option>
				}
			</select>
		</div>
		<div>
			<button class="btn btn-primary">Guardar</button>
		</div>
		<input type="hidden" id="id" name="id" value={ uuid.New().String() }/>
	</form>
}

templ ProductList(products []ProductOverview) {
	<div class="grid grid-cols-3 ">
		<span class="font-bold">Nombre</span>
		<span class="font-bold">Categoria</span>
	</div>
	<div id="products" hx-target="closest div" hx-swap="outerHTML swap:1s" hx-confirm="Procedemos eliminando el Producto?">
		for _, p := range products {
			@ProductRow(p)
		}
	</div>
}

templ ProductRow(p ProductOverview) {
	<div class="grid grid-cols-3">
		<span>{ p.Name }</span>
		<span>{ p.Category }</span>
		<span><a hx-delete={ fmt.Sprintf("/products/%s", p.Id) }>delete</a></span>
	</div>
}

templ ProductRowOob(p ProductOverview) {
	<div id="products" hx-swap-oob="afterbegin">
		@ProductRow(p)
	</div>
}
